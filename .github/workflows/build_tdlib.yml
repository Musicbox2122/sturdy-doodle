name: Build Specific TDLib Version (v1.8.0)

on:
  workflow_dispatch:

jobs:
  build_tdlib_for_android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code (full depth)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install build dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          gperf clang cmake make git \
          zlib1g-dev \
          libssl-dev \
          openjdk-11-jdk \
          gradle
        echo "--- Installed versions ---"
        java -version
        cmake --version
        clang --version
        git --version
        gradle -v
        echo "-------------------------"

    - name: Clone, Configure, Build TDLib, and Build AAR
      run: |
        echo "Cloning TDLib repository into 'td' directory..."
        git clone https://github.com/tdlib/td.git td
        
        cd td
        echo "Current directory after clone: $(pwd)"
        echo "Fetching all tags from remote 'origin'..."
        git fetch origin --tags 
        echo "Checking out tag v1.8.0..."
        git checkout v1.8.0
        echo "Current TDLib version/tag after checkout:"
        git describe --tags
        
        mkdir -p build 
        cd build
        echo "Current directory for CMake: $(pwd)"
        echo "Configuring CMake for TDLib JNI..."
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DTD_ENABLE_JNI=ON \
          -DCMAKE_INSTALL_PREFIX:PATH=../tdjni_install \
          -DTD_ENABLE_LTO=ON \
          ..
        
        echo "Building ALL CMake targets..."
        cmake --build . --config Release -j$(nproc)
        
        echo "Installing built CMake libraries and headers..."
        cmake --install . --config Release
        
        echo "--- Debug before moving to Gradle project ---"
        echo "Current directory before cd to example: $(pwd)"
        echo "Content of current directory (td/build):"
        ls -la
        echo "Content of parent directory (td):"
        ls -la ../
        echo "Content of td/example:"
        ls -la ../example/
        echo "Content of td/example/java:"
        ls -la ../example/java/
        echo "---------------------------------------------"
        
        echo "Moving to Gradle project directory for AAR build..."
        cd ../example/java/tdlib
        echo "Current directory for Gradle build: $(pwd)"
        echo "Listing files in current Gradle project directory:"
        ls -la
        echo "Building AAR with Gradle..."
        gradle assembleRelease

    - name: Upload AAR artifact
      uses: actions/upload-artifact@v4 
      with:
        name: tdlib-android-1.8.0-release.aar 
        path: td/example/java/tdlib/build/outputs/aar/tdlib-release.aar
        if-no-files-found: error
